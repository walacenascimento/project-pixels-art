{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2023-05-16T23:01:17.321Z",
    "end": "2023-05-16T23:02:44.112Z",
    "duration": 86791,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5fb602e3-8c7b-4cc8-816e-7c5411246efa",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c97407b5-d57d-4c33-948f-3920bc6e21e7",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "ea123f08-1a18-46d2-b023-5ca05807cdc8",
              "parentUUID": "c97407b5-d57d-4c33-948f-3920bc6e21e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea123f08-1a18-46d2-b023-5ca05807cdc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 570,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "2f8af4d1-9bd0-4efd-b53f-654f69eff922",
              "parentUUID": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b35b9b9b-4661-4a7a-80ff-7bb060f280bc",
              "parentUUID": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "1b695c0e-7787-4ae7-bafe-6655ad506794",
              "parentUUID": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "8d146379-8c2d-45c3-aa1d-b32be13f1b1f",
              "parentUUID": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "3a29163a-a8ba-4c7c-8b7b-9cdedb3e1f4f",
              "parentUUID": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "877c11af-9c52-4517-b81c-e3e3fa140e09",
              "parentUUID": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6b1d9d3d-71c6-4dc6-a32e-fc97d8b1f640",
              "parentUUID": "ffbf63b1-68b7-4cf2-bb28-d16a6dbfbc0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f8af4d1-9bd0-4efd-b53f-654f69eff922",
            "b35b9b9b-4661-4a7a-80ff-7bb060f280bc",
            "1b695c0e-7787-4ae7-bafe-6655ad506794",
            "8d146379-8c2d-45c3-aa1d-b32be13f1b1f",
            "3a29163a-a8ba-4c7c-8b7b-9cdedb3e1f4f",
            "877c11af-9c52-4517-b81c-e3e3fa140e09",
            "6b1d9d3d-71c6-4dc6-a32e-fc97d8b1f640"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1563,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb751b51-a364-4815-a89e-590cde7fc6b6",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "92106e65-8492-4f8a-b10a-dc3118679d4c",
              "parentUUID": "cb751b51-a364-4815-a89e-590cde7fc6b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "9b98150f-ac4a-4926-bd31-388dc7a5e63a",
              "parentUUID": "cb751b51-a364-4815-a89e-590cde7fc6b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92106e65-8492-4f8a-b10a-dc3118679d4c",
            "9b98150f-ac4a-4926-bd31-388dc7a5e63a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 512,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "50296a5e-46b5-46bb-b5fb-f65187114b13",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "2bf76189-9d1d-430a-a7f5-4fa9c1b23dbf",
              "parentUUID": "50296a5e-46b5-46bb-b5fb-f65187114b13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "3356cbed-e2ca-45f9-bbe2-87490a63b263",
              "parentUUID": "50296a5e-46b5-46bb-b5fb-f65187114b13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f5346a09-6228-425a-9370-fd482b65fa36",
              "parentUUID": "50296a5e-46b5-46bb-b5fb-f65187114b13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "0d85fe6f-6bd8-4b4a-a81e-ac9096c16d5c",
              "parentUUID": "50296a5e-46b5-46bb-b5fb-f65187114b13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bf76189-9d1d-430a-a7f5-4fa9c1b23dbf",
            "3356cbed-e2ca-45f9-bbe2-87490a63b263",
            "f5346a09-6228-425a-9370-fd482b65fa36",
            "0d85fe6f-6bd8-4b4a-a81e-ac9096c16d5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f45ef526-8b77-4b20-a21f-adca16022669",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "6352f3cb-d23c-4539-9d66-304d98c422b4",
              "parentUUID": "f45ef526-8b77-4b20-a21f-adca16022669",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "792dc787-8fb2-4615-9290-37cbf5d89288",
              "parentUUID": "f45ef526-8b77-4b20-a21f-adca16022669",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6352f3cb-d23c-4539-9d66-304d98c422b4",
            "792dc787-8fb2-4615-9290-37cbf5d89288"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 981,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d759af1-9b17-476a-8bcc-4805e8991f1e",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7b1ba4fb-a0a1-4b25-91e3-b0ed13637caa",
              "parentUUID": "4d759af1-9b17-476a-8bcc-4805e8991f1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b702c155-c63b-45ef-af56-a6bec4ecb7d8",
              "parentUUID": "4d759af1-9b17-476a-8bcc-4805e8991f1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b1ba4fb-a0a1-4b25-91e3-b0ed13637caa",
            "b702c155-c63b-45ef-af56-a6bec4ecb7d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 371,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d2c2b082-4249-4700-9f74-64eee742c58c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 555,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "d78bd04a-6b1e-46a6-a480-d07cf5a1ca9e",
              "parentUUID": "d2c2b082-4249-4700-9f74-64eee742c58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e655f220-6e76-4cd4-af23-f526217ad8ca",
              "parentUUID": "d2c2b082-4249-4700-9f74-64eee742c58c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d78bd04a-6b1e-46a6-a480-d07cf5a1ca9e",
            "e655f220-6e76-4cd4-af23-f526217ad8ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9526,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "85ba5dad-7b1f-4a0d-859e-5b22599021a0",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "ae3d62df-2445-4330-9655-c62741249e31",
              "parentUUID": "85ba5dad-7b1f-4a0d-859e-5b22599021a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9001,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "97dbba18-003c-4a46-8d98-7329e03ec232",
              "parentUUID": "85ba5dad-7b1f-4a0d-859e-5b22599021a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "fd944466-b24d-4815-a707-b0b9357f9f77",
              "parentUUID": "85ba5dad-7b1f-4a0d-859e-5b22599021a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae3d62df-2445-4330-9655-c62741249e31",
            "97dbba18-003c-4a46-8d98-7329e03ec232",
            "fd944466-b24d-4815-a707-b0b9357f9f77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bbaaff53-810b-4431-aa66-d61b6e4238a9",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "96a3755f-da02-404e-b37b-763d7bf26471",
              "parentUUID": "bbaaff53-810b-4431-aa66-d61b6e4238a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "4290d85d-6bd4-4e2f-8805-6915cc89cc72",
              "parentUUID": "bbaaff53-810b-4431-aa66-d61b6e4238a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7775c069-563d-4f20-a83b-3bd594efbc89",
              "parentUUID": "bbaaff53-810b-4431-aa66-d61b6e4238a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2552,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "5edcdfcc-925e-4d5f-9cdf-b324e2ce09d6",
              "parentUUID": "bbaaff53-810b-4431-aa66-d61b6e4238a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96a3755f-da02-404e-b37b-763d7bf26471",
            "4290d85d-6bd4-4e2f-8805-6915cc89cc72",
            "7775c069-563d-4f20-a83b-3bd594efbc89",
            "5edcdfcc-925e-4d5f-9cdf-b324e2ce09d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3081,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4479,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d78db2bf-6de8-4396-91c8-d720a3937641",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4484,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "54aabb4e-47e4-4cbc-8344-33cd940308e4",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4474,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4db60027-91b7-49ef-a817-8e5bb1017651",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4405,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f2ae515d-b655-482c-add7-f2b2d784b937",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a667037e-6f3f-400a-8acf-fdc55c92863c",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4411,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "146a9fd2-b352-4e97-9e6b-d913195dfb0b",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ccf8c769-f428-477d-9b27-877819316075",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4552,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6d633112-e9cf-44f7-ae53-ed889c65ed5d",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4528,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "90b1fbf0-19b5-4476-9c66-67febf6b4bf3",
              "parentUUID": "3aa3b3a0-42e1-4a8b-abde-55e647dcc907",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d78db2bf-6de8-4396-91c8-d720a3937641",
            "54aabb4e-47e4-4cbc-8344-33cd940308e4",
            "4db60027-91b7-49ef-a817-8e5bb1017651",
            "f2ae515d-b655-482c-add7-f2b2d784b937",
            "a667037e-6f3f-400a-8acf-fdc55c92863c",
            "146a9fd2-b352-4e97-9e6b-d913195dfb0b",
            "ccf8c769-f428-477d-9b27-877819316075",
            "6d633112-e9cf-44f7-ae53-ed889c65ed5d",
            "90b1fbf0-19b5-4476-9c66-67febf6b4bf3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ad50499-d08a-4652-bef0-181b7827ebc1",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4466,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2513ae9f-cd12-4f16-ac43-e7f2d1ad021f",
              "parentUUID": "4ad50499-d08a-4652-bef0-181b7827ebc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4485,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "569b85f6-5a32-436f-8dc0-4a074e789259",
              "parentUUID": "4ad50499-d08a-4652-bef0-181b7827ebc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4402,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44723/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44723/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44723/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44723/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44723/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44723/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44723/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44723/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44723/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44723/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44723/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac5c2d17-fe5f-4d70-8db5-8007c52609ee",
              "parentUUID": "4ad50499-d08a-4652-bef0-181b7827ebc1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2513ae9f-cd12-4f16-ac43-e7f2d1ad021f",
            "569b85f6-5a32-436f-8dc0-4a074e789259",
            "ac5c2d17-fe5f-4d70-8db5-8007c52609ee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13353,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75aee567-ecd9-4d53-b989-2eb90b10b5d2",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "aeb49f6b-b667-4b3a-8d2b-e71b6c48eb17",
              "parentUUID": "75aee567-ecd9-4d53-b989-2eb90b10b5d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "9123d537-457e-4e6d-88a5-3fcf2cd408ad",
              "parentUUID": "75aee567-ecd9-4d53-b989-2eb90b10b5d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aeb49f6b-b667-4b3a-8d2b-e71b6c48eb17",
            "9123d537-457e-4e6d-88a5-3fcf2cd408ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1480,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}